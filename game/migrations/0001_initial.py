# Generated by Django 3.1.7 on 2021-03-28 16:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import game.models
import upload_validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('posts', '0002_auto_20210328_1151'),
        ('users', '0001_initial'),
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('description', models.TextField(blank=True)),
                ('cover_image', models.ImageField(blank=True, help_text='Cover Image', upload_to=game.models.Channel.coverimage_upload_path, validators=[upload_validator.FileTypeValidator(allowed_types=['image/png', 'image/jpeg', 'image/bmp', 'image/heic', 'image/heif', 'image/tiff', 'image/gif']), django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'bmp', 'heic', 'heif', 'tiff', 'gif'])], verbose_name='Cover Image')),
                ('avatar', models.ImageField(blank=True, help_text='Channel Avatar', upload_to=game.models.Channel.avatar_upload_path, validators=[upload_validator.FileTypeValidator(allowed_types=['image/png', 'image/jpeg', 'image/bmp', 'image/heic', 'image/heif', 'image/tiff', 'image/gif']), django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'bmp', 'heic', 'heif', 'tiff', 'gif'])], verbose_name='Channel Avatar')),
                ('subscribers', models.ManyToManyField(blank=True, related_name='subscribed', to='users.Profile')),
                ('tags', models.ManyToManyField(blank=True, related_name='tagged_channel', to='tags.Tag')),
            ],
            options={
                'verbose_name': 'Channel',
                'verbose_name_plural': 'Channels',
            },
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Leaderboard',
                'verbose_name_plural': 'Leaderboards',
            },
        ),
        migrations.CreateModel(
            name='LeaderboardRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('leaderboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.leaderboard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'verbose_name': 'LeaderboardRow',
                'verbose_name_plural': 'LeaderboardRows',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, help_text='Game Image', upload_to=game.models.Game.gameimage_upload_path, validators=[upload_validator.FileTypeValidator(allowed_types=['image/png', 'image/jpeg', 'image/bmp', 'image/heic', 'image/heif', 'image/tiff', 'image/gif']), django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'bmp', 'heic', 'heif', 'tiff', 'gif'])], verbose_name='Game Image')),
                ('pinColorHex', models.CharField(blank=True, max_length=7)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.channel')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('leaderboard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.leaderboard')),
                ('posts', models.ManyToManyField(blank=True, related_name='in_game', to='posts.Post')),
                ('tags', models.ManyToManyField(blank=True, related_name='tagged_game', to='tags.Tag')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'unique_together': {('name', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='ValidatePost',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.channel')),
                ('creator_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_post', to='posts.post')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to='posts.post')),
            ],
            options={
                'verbose_name': 'ValidatePost',
                'verbose_name_plural': 'ValidatePosts',
                'ordering': ['timestamp'],
                'unique_together': {('game', 'post')},
            },
        ),
    ]
